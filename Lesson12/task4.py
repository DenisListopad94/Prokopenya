"""
4.	Разработайте программу, имитирующую работу транспортного агентства.
Транспортное агентство имеет сеть филиалов в нескольких городах.
Транспортировка грузов осуществляется между этими городами тремя видами транспорта: автомобильным, железнодорожным и
воздушным. Любой вид транспортировки имеет стоимость единицы веса на единицу пути и скорость доставки.
Воздушный транспорт можно использовать только между крупными городами, этот вид самый скоростной и самый дорогой.
Железнодорожный транспорт можно использовать между крупными и средними городами, этот вид самый дешевый.
Автомобильный транспорт можно использовать между любыми городами. Заказчики через случайные промежутки времени
обращаются в один из филиалов транспортного агентства с заказом на перевозку определенной массы груза и возможным
пожеланием о скорости/цене доставки. Транспортное агентство организует отправку грузов одним из видов
транспорта с учетом пожеланий клиента.

-Доход транспортного агентства, в том числе с разбивкой по видам транспорта и городам.
-Среднее время доставки груза, в том числе с разбивкой по видам транспорта и городам.
-Список исполняемых заказов с возможность сортировки по городам, видам транспорта, стоимости перевозки.
"""


class Transit:
    def __init__(self, speed_of_transport={}, pricing={}, cities_and_citizens={}):
        self.speed_of_transport = speed_of_transport
        self.pricing = pricing
        self.cities_and_citizens = cities_and_citizens

    def get_cities(self):
        if self.cities_and_citizens:
            print(f'##################################################################################################')
            print(f'Обращаем ваше внимание, доставка самолетом осуществляется в города с населением больше 1млн.чел\n'
                  f'Доставка поездом осуществляется в города с населением от 100тыс.чел и больше\n'
                  f'Автомобильный транспорт можно использовать между любыми городами')
            print(f'##################################################################################################')
            print(f'Доступные города: ')
            for city in self.cities_and_citizens.keys():
                print(f'{city}')
        else:
            print(f'В данный момент агентво не осуществляет грузоперевозки')

    def get_price(self):
        if self.pricing:
            print("Цена доставки в рублях за 1кг/км:")
            for transport, price in self.pricing.items():
                print(f'{transport} - {price}')

    def delivery(self):
        answer = None
        while answer != '5':
            print('Выберите действие:'
                  '1 - Выбрать город отправления'
                  '2 - Выбрать город отправления'
                  '3 - Сделать заказ на транспортировку груза'
                  '4 - Получить чек'
                  '5 - Выход')






    def menu(self):
        answer = None
        while answer !='5':
            print('вывберите действие:'
                  '1 - Посмотреть Доступные города для доставки грузов'
                  '2 - Посмотреть расценки'
                  '3 - Сделать заказ на транспортировку груза'
                  '4 - Получить чек'
                  '5 - Выход')
            action = int(input())
            if action == 1:
                self.get_cities()
            elif action == 2:
                self.get_price()
            elif action == 3:
                self.delivery()


cities = {'Минск': 2000000, 'Москва': 10000000, 'Пинск': 150000, 'Брест': 342000, 'Ивацевичи': 30000}
cost = {'Автомобиль': 15, 'Самолет': 1500, 'Поезд': 25}
speed = {'Автомобиль': 15, 'Самолет': 1500, 'Поезд': 25}


obj = Transit(speed, cost, cities)
# obj.get_cities()
# obj.get_price()


# class Plain(CargoCarrier):
#     def __init__(self, rate, speed):
#         super().__init__(rate=rate, speed=speed)
#
#     def compute_cost(self):
#         city1 = input("Введите город отправления ")
#         city2 = input("Введите город назначения ")
#         distance = float(input("Введите расстояние между городами "))
#         self.distance = distance
#         print(f'Средняя скорость самолета {self.speed} км/ч')
#         print(f'Стоимость транспортировки между городами {city1} - {city2}: '
#               f'тариф {self.rate} руб/км, расстояние {self.distance}, стоимость - {self.rate * self.distance}руб')
#
#
#
# class Train(CargoCarrier):
#     def __init__(self, rate, speed):
#         super().__init__(rate=rate, speed=speed)
#
#     def compute_cost(self):
#         city1 = input("Введите город отправления ")
#         city2 = input("Введите город назначения ")
#         distance = float(input("Введите расстояние между городами "))
#         self.distance = distance
#         print(f'Средняя скорость поезда {self.speed} км/ч')
#         print(f'Стоимость транспортировки между городами {city1} - {city2}: '
#               f'тариф {self.rate} руб/км, расстояние {self.distance}, стоимость - {self.rate * self.distance}руб')
#
#
#
# class Car(CargoCarrier):
#     def __init__(self, rate, speed):
#         super().__init__(rate=rate, speed=speed)
#
#     def compute_cost(self):
#         city1 = input("Введите город отправления ")
#         city2 = input("Введите город назначения ")
#         distance = float(input("Введите расстояние между городами "))
#         self.distance = distance
#         print(f'Средняя скорость автомобиля {self.speed} км/ч')
#         print(f'Стоимость транспортировки между городами {city1} - {city2}: '
#               f'тариф {self.rate} руб/км, расстояние {self.distance}, стоимость - {self.rate * self.distance}руб')

